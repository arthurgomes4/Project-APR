<launch>
<!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find pkg_techfest_imc)/world/my_world.world"/> -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

<group ns="robot">
  <param name="robot_description" command="xacro $(find project_apr_pkg)/model/robot.xacro"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find project_apr_pkg)/params/robot.yaml" command="load"/>

  <!-- load the controller -->
  <node 
  name="controller_spawner"
  pkg="controller_manager"
  type="spawner" 
  respawn="false"
  output="screen" 
  args="wheel1_joint_velocity_controller 
        wheel2_joint_velocity_controller
        wheel3_joint_velocity_controller
        wheel4_joint_velocity_controller
        joint_state_controller
        "/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen"/>

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-x 0 -y 0 -z 0.04 -Y 0 -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <node name="cmd_vel_node" pkg="project_apr_pkg" type="cmd_vel_node.py" output="screen"/>

  <node name="odom_node" pkg="project_apr_pkg" type="odom_node.py" output="screen"/>

</group>

</launch>